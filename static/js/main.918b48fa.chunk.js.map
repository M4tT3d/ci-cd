{"version":3,"sources":["App.js","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","calculate","deleteLast","createDigits","digits","i","push","onClick","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"syBAGA,SAASA,MACP,cAAwBC,oDAAS,IAAjC,kJAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,mJAAOG,OAAP,cAAeC,UAAf,cACMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BC,WAAa,SAAbA,WAAcC,OAEfF,IAAIG,SAASD,QAAmB,KAATN,MACvBI,IAAIG,SAASD,QAAUF,IAAIG,SAASP,KAAKQ,OAAO,MAInDP,QAAQD,KAAOM,OACVF,IAAIG,SAASD,QAChBH,UAAUM,KAAKT,KAAOM,OAAOI,cAG3BC,UAAY,SAAZA,YACJV,QAAQQ,KAAKT,MAAMU,aAEfE,WAAa,WACJ,KAATZ,MAGJC,QAAQD,KAAKQ,MAAM,GAAI,KAEnBK,aAAe,WAEnB,IADA,IAAIC,EAAS,GADY,WAEhBC,GACPD,EAAOE,KACL,qEAA2BC,QAAS,kBAAMZ,WAAWU,EAAEL,aAAvD,SACGK,GADH,gBAAsBA,MAFjBA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAOT,OAAOD,GAGT,OACE,kEAAKI,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACGhB,OAAS,kFAAQA,OAAR,OAA0B,GADtC,OACgDF,MAAQ,OAExD,mEAAKkB,UAAU,YAAf,UACE,qEAAQD,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAASL,WAAjB,oBAEF,mEAAKM,UAAU,SAAf,UACGL,eACD,qEAAQI,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAASN,UAAjB,uBAOKb,2B,6BChEf,iEAKAqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.918b48fa.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = [\"/\", \"*\", \"+\", \"-\", \".\"];\n  const updateCalc = (value) => {\n    if (\n      (ops.includes(value) && calc === \"\") ||\n      (ops.includes(value) && ops.includes(calc.slice(-1)))\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  };\n  const calculate = () => {\n    setCalc(eval(calc).toString())\n  }\n  const deleteLast = () => {\n    if (calc === \"\") {\n      return\n    }\n    setCalc(calc.slice(0, -1))\n  }\n  const createDigits = () => {\n    let digits = [];\n    for (let i = 1; i < 10; i++) {\n      digits.push(\n        <button key={`digit-${i}`} onClick={() => updateCalc(i.toString())}>\n          {i}\n        </button>\n      );\n    }\n    return digits;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          {result ? <span>({result})</span> : \"\"}&nbsp;{calc || \"0\"}\n        </div>\n        <div className=\"operators\">\n          <button onClick={() => updateCalc(\"/\")}>/</button>\n          <button onClick={() => updateCalc(\"*\")}>*</button>\n          <button onClick={() => updateCalc(\"+\")}>+</button>\n          <button onClick={() => updateCalc(\"-\")}>-</button>\n          <button onClick={deleteLast}>DEL</button>\n        </div>\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc(\"0\")}>0</button>\n          <button onClick={() => updateCalc(\".\")}>.</button>\n          <button onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}